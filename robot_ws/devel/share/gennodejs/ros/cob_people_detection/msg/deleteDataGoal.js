// Auto-generated. Do not edit!

// (in-package cob_people_detection.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class deleteDataGoal {
  constructor() {
    this.delete_mode = 0;
    this.delete_index = 0;
    this.label = '';
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type deleteDataGoal
    // Serialize message field [delete_mode]
    bufferInfo = _serializer.int32(obj.delete_mode, bufferInfo);
    // Serialize message field [delete_index]
    bufferInfo = _serializer.int32(obj.delete_index, bufferInfo);
    // Serialize message field [label]
    bufferInfo = _serializer.string(obj.label, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type deleteDataGoal
    let tmp;
    let len;
    let data = new deleteDataGoal();
    // Deserialize message field [delete_mode]
    tmp = _deserializer.int32(buffer);
    data.delete_mode = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [delete_index]
    tmp = _deserializer.int32(buffer);
    data.delete_index = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [label]
    tmp = _deserializer.string(buffer);
    data.label = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'cob_people_detection/deleteDataGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '699fefe29c3cb75fdf58d155b2fb38f5';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Deletes specific data in the training database
    #
    # goal message
    int32 delete_mode			# delete database entries in one of the following ways: 1=one entry given the delete_index, 2=all entries labeled with label
    int32 delete_index			# the database entry with this index number shall be deleted
    string label				# all database entries carrying this label are to be deleted
    
    `;
  }

};

module.exports = deleteDataGoal;
